CREATE DATABASE PIZZAHUT;
USE PIZZAHUT;
CREATE TABLE ORDERS(ORDER_ID INT PRIMARY KEY NOT NULL,ORDER_DATE  DATE NOT NULL,ORDER_TIME TIME NOT NULL);
SELECT * FROM ORDERS;
CREATE TABLE ORDER_DETAILS(ORDER_DETAIL_ID  INT PRIMARY KEY NOT NULL,ORDER_ID INT NOT NULL,PIZZA_ID TEXT NOT NULL,ORDER_QUANTITY INT NOT NULL);

-- 1.RETRIEVE THE TOTAL NO OF ORDERS

SELECT COUNT(ORDER_ID) AS TOTAL_ORDERS FROM ORDERS;

-- 2.CALCULATE TOTAL REVENUE GENERATED FROM TOTAL SALES

SELECT ROUND(SUM(ORDER_DETAILS.ORDER_QUANTITY * PIZZAS.PRICE),2) AS TOTAL_SALES
FROM ORDER_DETAILS JOIN PIZZAS ON PIZZAS.PIZZA_ID =ORDER_DETAILS.PIZZA_ID;

-- 3.IDENTIFY THE HIGHEST PIZZA PRICE

select PIZZA_TYPES.NAME,PIZZAS.PRICE FROM
PIZZA_TYPES JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID ORDER BY PIZZAS.PRICE DESC LIMIT 1;

-- 4.IDENTIFY THE MOST PIZZA SIZE ORDERED

SELECT PIZZAS.SIZE,COUNT(ORDER_DETAILS.ORDER_QUANTITY)AS ORDER_COUNT 
FROM PIZZAS JOIN ORDER_DETAILS ON PIZZAS.PIZZA_ID=ORDER_DETAILS.PIZZA_ID 
GROUP BY PIZZAS.SIZE  ORDER BY ORDER_COUNT DESC LIMIT 1;

-- 5.LIST TOP 5 MOST ORDERED PIZZA TYPES ALONG WITH THEIR QUANTITY

SELECT PIZZA_TYPES.NAME,SUM(ORDER_DETAILS.ORDER_QUANTITY)AS TOTAL_QUANTITY
FROM PIZZA_TYPES JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID 
JOIN ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID=PIZZAS.PIZZA_ID  GROUP BY PIZZA_TYPES.NAME ORDER BY TOTAL_QUANTITY DESC LIMIT 5;

-- 6. JOIN THE TABLES OF EACH CATEGORY ON  TOTAL QUANTITY OF EACH PIZZA ORDERED

SELECT PIZZA_TYPES.CATEGORY,SUM(ORDER_DETAILS.ORDER_QUANTITY)AS TOTAL_QUANTITY
FROM PIZZA_TYPES JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID 
JOIN ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID=PIZZAS.PIZZA_ID  GROUP BY PIZZA_TYPES.CATEGORY ORDER BY TOTAL_QUANTITY DESC LIMIT 5;


-- 7.DETERMINE THE DISTRIBUTION OF HOURS  OF THE DAY

SELECT HOUR(ORDER_TIME) AS HOURS,COUNT(ORDER_ID)AS TOTAL_QUANTITY FROM ORDERS GROUP BY HOURS;


-- 8.JOIN RELEVANT TABLES TO FIND THE CATEGORY WISE DISTRIBUTION OF PIZZAS

SELECT PIZZA_TYPES.CATEGORY,COUNT(PIZZA_TYPES.NAME) AS PIZZA_TYPE_COUNT 
FROM PIZZA_TYPES 
GROUP BY PIZZA_TYPES.CATEGORY;

-- 7.GROUP THE ORDERS BY DATE AND CALCULATE THE AVERAGE NUMBER OF PIZZAS ORDER PER DAY

SELECT ROUND(AVG(QUANTITY),0) 
FROM(SELECT ORDERS.ORDER_DATE,SUM(ORDER_DETAILS.ORDER_QUANTITY) AS QUANTITY
FROM  ORDERS JOIN ORDER_DETAILS 
ON ORDERS.ORDER_ID=ORDER_DETAILS.ORDER_ID GROUP BY ORDERS.ORDER_DATE) AS ORDER_QUANTITY;

-- 8.DETERMINE THE TOP MOST ORDERED PIZZA BASED ON REVENUE

SELECT PIZZA_TYPES.NAME,SUM(ORDER_DETAILS.ORDER_QUANTITY*PIZZAS.PRICE) AS REVENUE
FROM PIZZA_TYPES JOIN PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID 
JOIN ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID=PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.NAME ORDER BY REVENUE DESC LIMIT 3; 

-- 9.CALCULATE THE PERCENTAGE CONTRIBUTION OF EACH PIZZA TYPE OF TOTAL REVENUE

SELECT PIZZA_TYPES.CATEGORY,ROUND((SUM(ORDER_DETAILS.ORDER_QUANTITY*PIZZAS.PRICE) / 
(SELECT SUM(ORDER_DETAILS.ORDER_QUANTITY * PIZZAS.PRICE) AS TOTAL_SALES
FROM  ORDER_DETAILS JOIN PIZZAS ON PIZZAS.PIZZA_ID =ORDER_DETAILS.PIZZA_ID))*100 ,2) As revenue
FROM PIZZA_TYPES JOIN PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID=PIZZAS.PIZZA_TYPE_ID 
JOIN ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID=PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.CATEGORY ORDER BY REVENUE DESC LIMIT 3; 





